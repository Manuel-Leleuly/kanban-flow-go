package main

import (
	"os"

	_ "github.com/Manuel-Leleuly/kanban-flow-go/docs"
	dbhelper "github.com/Manuel-Leleuly/kanban-flow-go/helpers/db"
	"github.com/Manuel-Leleuly/kanban-flow-go/initializer"
	"github.com/Manuel-Leleuly/kanban-flow-go/routes"
	"github.com/sirupsen/logrus"
)

func init() {
	initializer.LoadEnvVariables()
}

//	@title			Kanban Flow Go
//	@version		1.0
//	@description	A simple API for Kanban Flow application
//	@termsOfService	http://swagger.io/terms/

//	@license.name	Apache 2.0
//	@license.url	https://www.apache.org/licenses/LICENSE-2.0.html

//	@host	localhost:3005

//	@securityDefinitions.apikey	ApiKeyAuth
//	@in							header
//	@name						Authorization
//	@description				use access token generated by the login endpoint

func main() {
	// check if client secret is set
	if os.Getenv("CLIENT_SECRET") == "" {
		logrus.Fatal("[Error] client secret is not set")
	}

	db := dbhelper.NewDBClient()

	if err := db.ConnectToDB(os.Getenv("DB_NAME")); err != nil {
		logrus.Fatal("[Error] failed to connect to db due to: " + err.Error())
	}

	if err := db.SyncDatabase(); err != nil {
		logrus.Fatal("[Error] failed to sync database due to: " + err.Error())
	}

	server := routes.GetRoutes(db)
	if err := server.Run(":3005"); err != nil {
		logrus.Fatal("[Error] failed to start Gin server due to: " + err.Error())
	}
}
